==3258== Helgrind, a thread error detector
==3258== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==3258== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==3258== Command: /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter
==3258== Parent PID: 1439
==3258== 
--3258-- 
--3258-- Valgrind options:
--3258--    --tool=helgrind
--3258--    --log-file=valgrind_helgrind.log
--3258--    -v
--3258-- Contents of /proc/version:
--3258--   Linux version 4.15.0-23-generic (buildd@lgw01-amd64-055) (gcc version 7.3.0 (Ubuntu 7.3.0-16ubuntu3)) #25-Ubuntu SMP Wed May 23 18:02:16 UTC 2018
--3258-- 
--3258-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--3258-- Page sizes: currently 4096, max supported 4096
--3258-- Valgrind library directory: /usr/lib/valgrind
--3258-- Reading syms from /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter
--3258-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--3258--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--3258--   .. CRC mismatch (computed 1b7c895e wanted 2943108a)
--3258--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--3258--   .. CRC is valid
--3258-- Reading syms from /usr/lib/valgrind/helgrind-amd64-linux
--3258--   Considering /usr/lib/valgrind/helgrind-amd64-linux ..
--3258--   .. CRC mismatch (computed 7d6a08f0 wanted b2fbd2c4)
--3258--    object doesn't have a symbol table
--3258--    object doesn't have a dynamic symbol table
--3258-- Scheduler: using generic scheduler lock implementation.
--3258-- Reading suppressions file: /usr/lib/valgrind/default.supp
==3258== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-3258-by-yurochko-on-???
==3258== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-3258-by-yurochko-on-???
==3258== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-3258-by-yurochko-on-???
==3258== 
==3258== TO CONTROL THIS PROCESS USING vgdb (which you probably
==3258== don't want to do, unless you know exactly what you're doing,
==3258== or are doing some strange experiment):
==3258==   /usr/lib/valgrind/../../bin/vgdb --pid=3258 ...command...
==3258== 
==3258== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==3258==   /path/to/gdb /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter
==3258== and then give GDB the following command
==3258==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=3258
==3258== --pid is optional if only one valgrind process is running
==3258== 
--3258-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--3258--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--3258--   .. CRC mismatch (computed 13d5e98a wanted 1786ecf1)
--3258--    object doesn't have a symbol table
--3258-- Reading syms from /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so
--3258--   Considering /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so ..
--3258--   .. CRC mismatch (computed 8bf999f1 wanted 70e3a4c7)
--3258--    object doesn't have a symbol table
--3258-- REDIR: 0x401d360 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c39c00 (strcmp)
--3258-- REDIR: 0x401f2f0 (ld-linux-x86-64.so.2:strlen) redirected to 0x4c38e90 (strlen)
--3258-- REDIR: 0x401f830 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c3c6a0 (mempcpy)
--3258-- Reading syms from /lib/x86_64-linux-gnu/libdl-2.27.so
--3258--   Considering /lib/x86_64-linux-gnu/libdl-2.27.so ..
--3258--   .. CRC mismatch (computed bd82fa02 wanted d1fdccc9)
--3258--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libdl-2.27.so ..
--3258--   .. CRC is valid
--3258-- Reading syms from /lib/x86_64-linux-gnu/librt-2.27.so
--3258--   Considering /lib/x86_64-linux-gnu/librt-2.27.so ..
--3258--   .. CRC mismatch (computed 16979484 wanted f9e041e3)
--3258--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/librt-2.27.so ..
--3258--   .. CRC is valid
--3258-- Reading syms from /lib/x86_64-linux-gnu/libpthread-2.27.so
--3258--   Considering /usr/lib/debug/.build-id/28/c6aade70b2d40d1f0f3d0a1a0cad1ab816448f.debug ..
--3258--   .. build-id is valid
==3258== WARNING: new redirection conflicts with existing -- ignoring it
--3258--     old: 0x0525cc60 (pthread_spin_init   ) W-> (0000.0) 0x04c38450 pthread_spin_init
--3258--     new: 0x0525cc60 (pthread_spin_init   ) W-> (0000.0) 0x04c38460 pthread_spin_unlock
==3258== WARNING: new redirection conflicts with existing -- ignoring it
--3258--     old: 0x0525e810 (sem_wait@@GLIBC_2.2.) W-> (0000.0) 0x04c38540 sem_wait@*
--3258--     new: 0x0525e810 (sem_wait@@GLIBC_2.2.) W-> (0000.0) 0x04c38530 sem_wait
==3258== WARNING: new redirection conflicts with existing -- ignoring it
--3258--     old: 0x0525ea80 (sem_post@@GLIBC_2.2.) W-> (0000.0) 0x04c38560 sem_post@*
--3258--     new: 0x0525ea80 (sem_post@@GLIBC_2.2.) W-> (0000.0) 0x04c38550 sem_post
--3258-- Reading syms from /lib/x86_64-linux-gnu/libgcc_s.so.1
--3258--    object doesn't have a symbol table
--3258-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--3258--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--3258--   .. CRC mismatch (computed b1c74187 wanted 042cc048)
--3258--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--3258--   .. CRC is valid
--3258-- Reading syms from /lib/x86_64-linux-gnu/libm-2.27.so
--3258--   Considering /lib/x86_64-linux-gnu/libm-2.27.so ..
--3258--   .. CRC mismatch (computed 7feae033 wanted b29b2508)
--3258--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libm-2.27.so ..
--3258--   .. CRC is valid
--3258-- REDIR: 0x5723c70 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722d40 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723f50 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722790 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722d70 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x57257c0 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723de0 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723c10 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722d00 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722800 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723d40 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x57410f0 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722ca0 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722870 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723fa0 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722840 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x57240e0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722da0 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x57227c0 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5722c70 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x572d6c0 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723ff0 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723be0 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5741eb0 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723050 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723f20 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5723ef0 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x57257f0 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5724040 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--3258-- REDIR: 0x5736330 (libc.so.6:__strrchr_sse2) redirected to 0x4c38aa0 (__strrchr_sse2)
--3258-- REDIR: 0x5257fa0 (libpthread.so.0:pthread_mutex_lock) redirected to 0x4c37f50 (pthread_mutex_lock)
--3258-- REDIR: 0x5736620 (libc.so.6:__strlen_sse2) redirected to 0x4c38e10 (__strlen_sse2)
--3258-- REDIR: 0x580a510 (libc.so.6:__strncmp_sse42) redirected to 0x4c39290 (__strncmp_sse42)
--3258-- REDIR: 0x5257780 (libpthread.so.0:pthread_mutex_init) redirected to 0x4c37d80 (pthread_mutex_init)
--3258-- REDIR: 0x52597a0 (libpthread.so.0:pthread_mutex_unlock) redirected to 0x4c37f80 (pthread_mutex_unlock)
--3258-- REDIR: 0x5740870 (libc.so.6:__memset_sse2_unaligned) redirected to 0x4c3b9c0 (memset)
--3258-- REDIR: 0x5730970 (libc.so.6:__memchr_sse2) redirected to 0x4c39ca0 (memchr)
--3258-- REDIR: 0x5740460 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4c39d80 (memcpy@GLIBC_2.2.5)
--3258-- REDIR: 0x1f84b0 (NONE:malloc) redirected to 0x4c30ec0 (malloc)
--3258-- REDIR: 0x5723590 (libc.so.6:__GI_strstr) redirected to 0x4c3c800 (__strstr_sse2)
--3258-- REDIR: 0x1fa570 (NONE:realloc) redirected to 0x4c330d0 (realloc)
--3258-- REDIR: 0x5730ca0 (libc.so.6:__rawmemchr_sse2) redirected to 0x4c3c440 (rawmemchr)
--3258-- REDIR: 0x1fbb30 (NONE:free) redirected to 0x4c320f0 (free)
--3258-- REDIR: 0x5814fc0 (libc.so.6:__memcmp_sse4_1) redirected to 0x4c3b610 (__memcmp_sse4_1)
--3258-- REDIR: 0x525b3c0 (libpthread.so.0:pthread_cond_init@@GLIBC_2.3.2) redirected to 0x4c37fd0 (pthread_cond_init@*)
--3258-- REDIR: 0x1f98f0 (NONE:calloc) redirected to 0x4c32e90 (calloc)
--3258-- REDIR: 0x52559b0 (libpthread.so.0:pthread_create@@GLIBC_2.2.5) redirected to 0x4c37b30 (pthread_create@*)
--3258-- REDIR: 0x525c5a0 (libpthread.so.0:pthread_cond_broadcast@@GLIBC_2.3.2) redirected to 0x4c37fc0 (pthread_cond_broadcast@*)
==3258== ---Thread-Announcement------------------------------------------
==3258== 
==3258== Thread #1 is the program's root thread
==3258== 
==3258== ---Thread-Announcement------------------------------------------
==3258== 
==3258== Thread #2 was created
==3258==    at 0x57A687E: clone (clone.S:71)
==3258==    by 0x5255EC4: create_thread (createthread.c:100)
==3258==    by 0x5255EC4: pthread_create@@GLIBC_2.2.5 (pthread_create.c:797)
==3258==    by 0x4C36A27: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1DCD70: std::sys::unix::thread::Thread::new (thread.rs:78)
==3258==    by 0x18B4AB: std::thread::Builder::spawn (mod.rs:419)
==3258==    by 0x17D1EA: rayon_core::registry::Registry::new (registry.rs:134)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x4941C8 by thread #1
==3258== Locks held: none
==3258==    at 0x186CA4: get<bool,fn() -> bool> (lazy.rs:27)
==3258==    by 0x186CA4: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x186CA4: <rayon_core::log::LOG_ENV as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x17DB0B: rayon_core::registry::Registry::inject (registry.rs:292)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #2
==3258== Locks held: none
==3258==    at 0x197017: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x196EEA: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x196E6F: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x186C9E: get<bool,fn() -> bool> (lazy.rs:23)
==3258==    by 0x186C9E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x186C9E: <rayon_core::log::LOG_ENV as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x17E347: rayon_core::registry::WorkerThread::wait_until (registry.rs:541)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==  Address 0x4941c8 is 0 bytes inside data symbol "_ZN68_$LT$rayon_core..log..LOG_ENV$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17ha96f2a5faf185afdE"
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x6C1D000 by thread #1
==3258== Locks held: none
==3258==    at 0x17DB16: rayon_core::registry::Registry::inject (registry.rs:292)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #2
==3258== Locks held: none
==3258==    at 0x196FF6: new<bool> (boxed.rs:96)
==3258==    by 0x196FF6: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x196EEA: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x196E6F: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x186C9E: get<bool,fn() -> bool> (lazy.rs:23)
==3258==    by 0x186C9E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x186C9E: <rayon_core::log::LOG_ENV as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x17E347: rayon_core::registry::WorkerThread::wait_until (registry.rs:541)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==  Address 0x6c1d000 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66171B0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x18FAA6: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x189CBD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x187089: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x17CB6E: rayon_core::registry::Registry::new (registry.rs:113)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==  Address 0x66171b0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during write of size 8 at 0x661A150 by thread #1
==3258== Locks held: 1, at address 0x66171B0
==3258==    at 0x199550: core::sync::atomic::atomic_store (atomic.rs:1695)
==3258==    by 0x198FE6: core::sync::atomic::AtomicIsize::store (atomic.rs:1119)
==3258==    by 0x18DFA2: <crossbeam_deque::Deque<T>>::push (lib.rs:425)
==3258==    by 0x17DDB0: rayon_core::registry::Registry::inject (registry.rs:304)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258== 
==3258== This conflicts with a previous read of size 8 by thread #2
==3258== Locks held: none
==3258==    at 0x199333: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x198F9D: core::sync::atomic::AtomicIsize::load (atomic.rs:1088)
==3258==    by 0x18EE8D: <crossbeam_deque::Stealer<T>>::steal (lib.rs:721)
==3258==    by 0x17DE16: rayon_core::registry::Registry::pop_injected_job (registry.rs:312)
==3258==    by 0x17E884: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (registry.rs:565)
==3258==    by 0x192737: <core::option::Option<T>>::or_else (option.rs:714)
==3258==    by 0x17E55C: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:563)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==  Address 0x661a150 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66171B0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x18FAA6: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x189CBD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x187089: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x17CB6E: rayon_core::registry::Registry::new (registry.rs:113)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==  Address 0x66171b0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 8 at 0x661A150 by thread #2
==3258== Locks held: none
==3258==    at 0x199333: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x198F9D: core::sync::atomic::AtomicIsize::load (atomic.rs:1088)
==3258==    by 0x18EE8D: <crossbeam_deque::Stealer<T>>::steal (lib.rs:721)
==3258==    by 0x17DE16: rayon_core::registry::Registry::pop_injected_job (registry.rs:312)
==3258==    by 0x17E884: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (registry.rs:565)
==3258==    by 0x192737: <core::option::Option<T>>::or_else (option.rs:714)
==3258==    by 0x17E55C: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:563)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==    by 0x196D90: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)
==3258==    by 0x18BB83: std::thread::Builder::spawn::{{closure}}::{{closure}} (mod.rs:409)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: 1, at address 0x66171B0
==3258==    at 0x199550: core::sync::atomic::atomic_store (atomic.rs:1695)
==3258==    by 0x198FE6: core::sync::atomic::AtomicIsize::store (atomic.rs:1119)
==3258==    by 0x18DFA2: <crossbeam_deque::Deque<T>>::push (lib.rs:425)
==3258==    by 0x17DDB0: rayon_core::registry::Registry::inject (registry.rs:304)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==  Address 0x661a150 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66171B0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x18FAA6: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x189CBD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x187089: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x17CB6E: rayon_core::registry::Registry::new (registry.rs:113)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==  Address 0x66171b0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 8 at 0x662D000 by thread #2
==3258== Locks held: none
==3258==    at 0x1989CB: core::ptr::read (ptr.rs:287)
==3258==    by 0x18EC9B: <crossbeam_deque::Buffer<T>>::read (lib.rs:158)
==3258==    by 0x18EF80: <crossbeam_deque::Stealer<T>>::steal (lib.rs:730)
==3258==    by 0x17DE16: rayon_core::registry::Registry::pop_injected_job (registry.rs:312)
==3258==    by 0x17E884: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (registry.rs:565)
==3258==    by 0x192737: <core::option::Option<T>>::or_else (option.rs:714)
==3258==    by 0x17E55C: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:563)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==    by 0x196D90: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)
==3258==    by 0x18BB83: std::thread::Builder::spawn::{{closure}}::{{closure}} (mod.rs:409)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: 1, at address 0x66171B0
==3258==    at 0x198AF0: core::ptr::write (ptr.rs:363)
==3258==    by 0x18ED1C: <crossbeam_deque::Buffer<T>>::write (lib.rs:153)
==3258==    by 0x18DF20: <crossbeam_deque::Deque<T>>::push (lib.rs:423)
==3258==    by 0x17DDB0: rayon_core::registry::Registry::inject (registry.rs:304)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==  Address 0x662d000 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66171B0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x18FAA6: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x189CBD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x187089: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x17CB6E: rayon_core::registry::Registry::new (registry.rs:113)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==  Address 0x66171b0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 8 at 0x662D008 by thread #2
==3258== Locks held: none
==3258==    at 0x1989D3: core::ptr::read (ptr.rs:287)
==3258==    by 0x18EC9B: <crossbeam_deque::Buffer<T>>::read (lib.rs:158)
==3258==    by 0x18EF80: <crossbeam_deque::Stealer<T>>::steal (lib.rs:730)
==3258==    by 0x17DE16: rayon_core::registry::Registry::pop_injected_job (registry.rs:312)
==3258==    by 0x17E884: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (registry.rs:565)
==3258==    by 0x192737: <core::option::Option<T>>::or_else (option.rs:714)
==3258==    by 0x17E55C: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:563)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==    by 0x196D90: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)
==3258==    by 0x18BB83: std::thread::Builder::spawn::{{closure}}::{{closure}} (mod.rs:409)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: 1, at address 0x66171B0
==3258==    at 0x198AF3: core::ptr::write (ptr.rs:363)
==3258==    by 0x18ED1C: <crossbeam_deque::Buffer<T>>::write (lib.rs:153)
==3258==    by 0x18DF20: <crossbeam_deque::Deque<T>>::push (lib.rs:423)
==3258==    by 0x17DDB0: rayon_core::registry::Registry::inject (registry.rs:304)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==  Address 0x662d008 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x6620020 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E80: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620020 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 2 at 0x6620022 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E80: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620022 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 4 at 0x6620024 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E80: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 4 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620024 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6620028 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E80: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x123803: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x123803: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620028 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 4 at 0x6620030 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E8E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 4 by thread #1
==3258== Locks held: none
==3258==    at 0x12380F: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x12380F: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620030 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 2 at 0x6620034 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E8E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x12380F: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x12380F: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620034 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x6620036 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E8E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x12380F: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x12380F: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620036 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6620038 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E8E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x12381B: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x12381B: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620038 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 1 at 0x6620020 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x135917: core::ptr::swap_nonoverlapping_bytes (ptr.rs:222)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620020 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 2 at 0x6620022 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x135917: core::ptr::swap_nonoverlapping_bytes (ptr.rs:222)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620022 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 4 at 0x6620024 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x135917: core::ptr::swap_nonoverlapping_bytes (ptr.rs:222)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 4 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620024 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 8 at 0x6620028 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x135917: core::ptr::swap_nonoverlapping_bytes (ptr.rs:222)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x123803: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x123803: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620028 is in a rw- anonymous segment
==3258== 
--3258-- REDIR: 0x525b7b0 (libpthread.so.0:pthread_cond_wait@@GLIBC_2.3.2) redirected to 0x4c37f90 (pthread_cond_wait@*)
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 8 at 0x661F008 by thread #1
==3258== Locks held: none
==3258==    at 0x16CDEC: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x133399: <core::sync::atomic::AtomicPtr<T>>::store (atomic.rs:764)
==3258==    by 0x12BA8C: <spmc::Queue<T>>::push (lib.rs:216)
==3258==    by 0x12BC14: <spmc::Sender<T>>::send (lib.rs:64)
==3258==    by 0x151038: word_counter::read_file_char (main.rs:55)
==3258==    by 0x152D6B: word_counter::main (main.rs:168)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous read of size 8 by thread #2
==3258== Locks held: none
==3258==    at 0x16CB63: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x1332C0: <core::sync::atomic::AtomicPtr<T>>::load (atomic.rs:731)
==3258==    by 0x12B8F9: <spmc::Queue<T>>::pop (lib.rs:235)
==3258==    by 0x12C43D: <spmc::Receiver<T>>::try_recv (lib.rs:108)
==3258==    by 0x12BE1E: <spmc::Receiver<T>>::recv (lib.rs:125)
==3258==    by 0x1515DE: word_counter::count_words (main.rs:71)
==3258==    by 0x124C53: word_counter::main::{{closure}} (main.rs:162)
==3258==    by 0x1376DA: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258==  Address 0x661f008 is in a rw- anonymous segment
==3258== 
--3258-- REDIR: 0x525c240 (libpthread.so.0:pthread_cond_signal@@GLIBC_2.3.2) redirected to 0x4c37fb0 (pthread_cond_signal@*)
==3258== ----------------------------------------------------------------
==3258== 
==3258== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==3258==    at 0x4C34714: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x12BD19: <spmc::Sender<T>>::send (lib.rs:67)
==3258==    by 0x151038: word_counter::read_file_char (main.rs:55)
==3258==    by 0x152D6B: word_counter::main (main.rs:168)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==3258==    at 0x4C34714: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x12BD19: <spmc::Sender<T>>::send (lib.rs:67)
==3258==    by 0x15118D: word_counter::read_file_char (main.rs:61)
==3258==    by 0x152D6B: word_counter::main (main.rs:168)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==3258==    at 0x4C348F4: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x12C97E: <spmc::Sender<T> as core::ops::drop::Drop>::drop (lib.rs:79)
==3258==    by 0x120960: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x14420F: core::mem::drop (mem.rs:790)
==3258==    by 0x1511C3: word_counter::read_file_char (main.rs:62)
==3258==    by 0x152D6B: word_counter::main (main.rs:168)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x4941B8 by thread #2
==3258== Locks held: none
==3258==    at 0x172174: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:27)
==3258==    by 0x172174: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x172174: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258==    by 0x151B6C: word_counter::count_words (main.rs:92)
==3258==    by 0x124C53: word_counter::main::{{closure}} (main.rs:162)
==3258==    by 0x1376DA: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x17B15B: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x4941b8 is 0 bytes inside data symbol "_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h18958159d0a321b1E"
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 2 at 0x6616128 by thread #2
==3258== Locks held: none
==3258==    at 0x174AAE: <core::ptr::NonNull<T>>::as_ref (ptr.rs:2905)
==3258==    by 0x171B02: <alloc::arc::Arc<T>>::inner (arc.rs:510)
==3258==    by 0x172032: <alloc::arc::Arc<T> as core::clone::Clone>::clone (arc.rs:713)
==3258==    by 0x173672: <crossbeam_epoch::collector::Collector as core::clone::Clone>::clone (collector.rs:45)
==3258==    by 0x16E0C7: crossbeam_epoch::internal::Local::register (internal.rs:286)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x17B137: new<crossbeam_epoch::collector::Collector> (boxed.rs:96)
==3258==    by 0x17B137: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x6616128 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x661612C by thread #2
==3258== Locks held: none
==3258==    at 0x174AAE: <core::ptr::NonNull<T>>::as_ref (ptr.rs:2905)
==3258==    by 0x171B02: <alloc::arc::Arc<T>>::inner (arc.rs:510)
==3258==    by 0x172032: <alloc::arc::Arc<T> as core::clone::Clone>::clone (arc.rs:713)
==3258==    by 0x173672: <crossbeam_epoch::collector::Collector as core::clone::Clone>::clone (collector.rs:45)
==3258==    by 0x16E0C7: crossbeam_epoch::internal::Local::register (internal.rs:286)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x17B137: new<crossbeam_epoch::collector::Collector> (boxed.rs:96)
==3258==    by 0x17B137: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x661612c is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667000 by thread #2
==3258== Locks held: none
==3258==    at 0x17554F: core::sync::atomic::atomic_add (atomic.rs:1734)
==3258==    by 0x175A06: core::sync::atomic::AtomicUsize::fetch_add (atomic.rs:1301)
==3258==    by 0x172055: <alloc::arc::Arc<T> as core::clone::Clone>::clone (arc.rs:713)
==3258==    by 0x173672: <crossbeam_epoch::collector::Collector as core::clone::Clone>::clone (collector.rs:45)
==3258==    by 0x16E0C7: crossbeam_epoch::internal::Local::register (internal.rs:286)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x171A2F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==  Address 0x6667000 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 2 at 0x6616128 by thread #2
==3258== Locks held: none
==3258==    at 0x174AAE: <core::ptr::NonNull<T>>::as_ref (ptr.rs:2905)
==3258==    by 0x171B02: <alloc::arc::Arc<T>>::inner (arc.rs:510)
==3258==    by 0x172112: <alloc::arc::Arc<T> as core::ops::deref::Deref>::deref (arc.rs:740)
==3258==    by 0x16E291: crossbeam_epoch::internal::Local::register (internal.rs:292)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x17B137: new<crossbeam_epoch::collector::Collector> (boxed.rs:96)
==3258==    by 0x17B137: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x6616128 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x661612C by thread #2
==3258== Locks held: none
==3258==    at 0x174AAE: <core::ptr::NonNull<T>>::as_ref (ptr.rs:2905)
==3258==    by 0x171B02: <alloc::arc::Arc<T>>::inner (arc.rs:510)
==3258==    by 0x172112: <alloc::arc::Arc<T> as core::ops::deref::Deref>::deref (arc.rs:740)
==3258==    by 0x16E291: crossbeam_epoch::internal::Local::register (internal.rs:292)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x17B137: new<crossbeam_epoch::collector::Collector> (boxed.rs:96)
==3258==    by 0x17B137: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x661612c is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667100 by thread #2
==3258== Locks held: none
==3258==    at 0x175AC2: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x16FE93: <crossbeam_epoch::atomic::Atomic<T>>::load (atomic.rs:210)
==3258==    by 0x177C32: <crossbeam_epoch::sync::list::List<T, C>>::insert (list.rs:178)
==3258==    by 0x16E2D7: crossbeam_epoch::internal::Local::register (internal.rs:292)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x6667100 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x66670C0 by thread #2
==3258== Locks held: none
==3258==    at 0x16CB72: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x1491ED: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x12B18E: crossbeam_epoch::epoch::AtomicEpoch::load (epoch.rs:86)
==3258==    by 0x14D26E: crossbeam_epoch::internal::Local::pin (internal.rs:348)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x66670c0 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6644A00 by thread #2
==3258== Locks held: none
==3258==    at 0x175AB3: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x16FE93: <crossbeam_epoch::atomic::Atomic<T>>::load (atomic.rs:210)
==3258==    by 0x178040: <crossbeam_epoch::sync::list::Iter<'g, T, C> as core::iter::iterator::Iterator>::next (list.rs:238)
==3258==    by 0x16DE77: crossbeam_epoch::internal::Global::try_advance (internal.rs:211)
==3258==    by 0x16DB25: crossbeam_epoch::internal::Global::collect (internal.rs:175)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x170782: new<crossbeam_epoch::internal::Local> (boxed.rs:96)
==3258==    by 0x170782: <crossbeam_epoch::atomic::Owned<T>>::new (atomic.rs:627)
==3258==    by 0x16E212: crossbeam_epoch::internal::Local::register (internal.rs:283)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==  Address 0x6644a00 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6644A08 by thread #2
==3258== Locks held: none
==3258==    at 0x175AC2: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x17AD4E: crossbeam_epoch::epoch::AtomicEpoch::load (epoch.rs:86)
==3258==    by 0x16DF67: crossbeam_epoch::internal::Global::try_advance (internal.rs:220)
==3258==    by 0x16DB25: crossbeam_epoch::internal::Global::collect (internal.rs:175)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x170782: new<crossbeam_epoch::internal::Local> (boxed.rs:96)
==3258==    by 0x170782: <crossbeam_epoch::atomic::Owned<T>>::new (atomic.rs:627)
==3258==    by 0x16E212: crossbeam_epoch::internal::Local::register (internal.rs:283)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==  Address 0x6644a08 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 8 at 0x66670C0 by thread #2
==3258== Locks held: none
==3258==    at 0x175B8C: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x175976: core::sync::atomic::AtomicUsize::store (atomic.rs:1119)
==3258==    by 0x17AD95: crossbeam_epoch::epoch::AtomicEpoch::store (epoch.rs:92)
==3258==    by 0x16E052: crossbeam_epoch::internal::Global::try_advance (internal.rs:240)
==3258==    by 0x16DB25: crossbeam_epoch::internal::Global::collect (internal.rs:175)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x66670c0 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667040 by thread #2
==3258== Locks held: none
==3258==    at 0x175AB3: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x16FED3: <crossbeam_epoch::atomic::Atomic<T>>::load (atomic.rs:210)
==3258==    by 0x172D93: pop_if_internal<crossbeam_epoch::internal::SealedBag,&&closure> (queue.rs:134)
==3258==    by 0x172D93: <crossbeam_epoch::sync::queue::Queue<T>>::try_pop_if (queue.rs:172)
==3258==    by 0x16DC35: crossbeam_epoch::internal::Global::collect (internal.rs:184)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x6667040 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66170C0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x14DB26: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x1375BD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x148C42: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x152A22: word_counter::main (main.rs:152)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258==  Address 0x66170c0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during write of size 1 at 0x661A101 by thread #2
==3258== Locks held: 1, at address 0x66170C0
==3258==    at 0x16CCED: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x148FAD: core::sync::atomic::AtomicBool::store (atomic.rs:351)
==3258==    by 0x11EF02: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:186)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258==    by 0x152310: word_counter::collect_dict (main.rs:124)
==3258==    by 0x124C9B: word_counter::main::{{closure}} (main.rs:176)
==3258==    by 0x1376A3: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258==    by 0x12B556: std::panicking::try::do_call (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x12B43E: std::panicking::try (panicking.rs:289)
==3258==    by 0x137713: std::panic::catch_unwind (panic.rs:392)
==3258== 
==3258== This conflicts with a previous read of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x16CC21: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x148EED: core::sync::atomic::AtomicBool::load (atomic.rs:320)
==3258==    by 0x11DE39: <crossbeam_channel::flavors::list::Channel<T>>::start_recv (list.rs:222)
==3258==    by 0x11E7CC: <crossbeam_channel::flavors::list::Channel<T>>::recv (list.rs:314)
==3258==    by 0x13B2CE: <crossbeam_channel::internal::channel::Receiver<T>>::recv (channel.rs:527)
==3258==    by 0x152E82: word_counter::main (main.rs:181)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==  Address 0x661a101 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66170C0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x14DB26: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x1375BD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x148C42: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x152A22: word_counter::main (main.rs:152)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258==  Address 0x66170c0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 1 at 0x661A101 by thread #1
==3258== Locks held: none
==3258==    at 0x16CC21: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x148EED: core::sync::atomic::AtomicBool::load (atomic.rs:320)
==3258==    by 0x11DE39: <crossbeam_channel::flavors::list::Channel<T>>::start_recv (list.rs:222)
==3258==    by 0x11E7CC: <crossbeam_channel::flavors::list::Channel<T>>::recv (list.rs:314)
==3258==    by 0x13B2CE: <crossbeam_channel::internal::channel::Receiver<T>>::recv (channel.rs:527)
==3258==    by 0x152E82: word_counter::main (main.rs:181)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #2
==3258== Locks held: 1, at address 0x66170C0
==3258==    at 0x16CCED: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x148FAD: core::sync::atomic::AtomicBool::store (atomic.rs:351)
==3258==    by 0x11EF02: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:186)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258==    by 0x152310: word_counter::collect_dict (main.rs:124)
==3258==    by 0x124C9B: word_counter::main::{{closure}} (main.rs:176)
==3258==    by 0x1376A3: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258==  Address 0x661a101 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66170C0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x14DB26: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x1375BD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x148C42: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x152A22: word_counter::main (main.rs:152)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258==  Address 0x66170c0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 1 at 0x661A100 by thread #1
==3258== Locks held: none
==3258==    at 0x14C21F: core::ptr::read (ptr.rs:287)
==3258==    by 0x144DD2: core::ptr::<impl *mut T>::read (ptr.rs:1828)
==3258==    by 0x11E6BB: <crossbeam_channel::flavors::list::Channel<T>>::read (list.rs:295)
==3258==    by 0x11E7EB: <crossbeam_channel::flavors::list::Channel<T>>::recv (list.rs:316)
==3258==    by 0x13B2CE: <crossbeam_channel::internal::channel::Receiver<T>>::recv (channel.rs:527)
==3258==    by 0x152E82: word_counter::main (main.rs:181)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #2
==3258== Locks held: 1, at address 0x66170C0
==3258==    at 0x14C767: core::ptr::write (ptr.rs:363)
==3258==    by 0x144E1C: core::ptr::<impl *mut T>::write (ptr.rs:2120)
==3258==    by 0x11EED7: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:185)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258==    by 0x152310: word_counter::collect_dict (main.rs:124)
==3258==    by 0x124C9B: word_counter::main::{{closure}} (main.rs:176)
==3258==    by 0x1376A3: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258==  Address 0x661a100 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 8 at 0x6644A08 by thread #1
==3258== Locks held: none
==3258==    at 0x16CDEC: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x149236: core::sync::atomic::AtomicUsize::store (atomic.rs:1119)
==3258==    by 0x12B1D5: crossbeam_epoch::epoch::AtomicEpoch::store (epoch.rs:92)
==3258==    by 0x14D6CC: crossbeam_epoch::internal::Local::unpin (internal.rs:393)
==3258==    by 0x123077: <crossbeam_epoch::guard::Guard as core::ops::drop::Drop>::drop (guard.rs:328)
==3258==    by 0x121D5D: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x11E70D: <crossbeam_channel::flavors::list::Channel<T>>::read (list.rs:298)
==3258==    by 0x11E7EB: <crossbeam_channel::flavors::list::Channel<T>>::recv (list.rs:316)
==3258==    by 0x13B2CE: <crossbeam_channel::internal::channel::Receiver<T>>::recv (channel.rs:527)
==3258==    by 0x152E82: word_counter::main (main.rs:181)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258== 
==3258== This conflicts with a previous read of size 8 by thread #2
==3258== Locks held: none
==3258==    at 0x175AC2: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x17AD4E: crossbeam_epoch::epoch::AtomicEpoch::load (epoch.rs:86)
==3258==    by 0x16DF67: crossbeam_epoch::internal::Global::try_advance (internal.rs:220)
==3258==    by 0x16DB25: crossbeam_epoch::internal::Global::collect (internal.rs:175)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==  Address 0x6644a08 is in a rw- anonymous segment
==3258== 
--3258-- REDIR: 0x5257940 (libpthread.so.0:pthread_mutex_destroy) redirected to 0x4c37f40 (pthread_mutex_destroy)
--3258-- REDIR: 0x525b3f0 (libpthread.so.0:pthread_cond_destroy@@GLIBC_2.3.2) redirected to 0x4c37fe0 (pthread_cond_destroy@*)
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x66670C0 by thread #2
==3258== Locks held: none
==3258==    at 0x175AC2: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x17AD4E: crossbeam_epoch::epoch::AtomicEpoch::load (epoch.rs:86)
==3258==    by 0x16E65E: crossbeam_epoch::internal::Local::pin (internal.rs:348)
==3258==    by 0x16EF87: crossbeam_epoch::internal::Local::finalize (internal.rs:457)
==3258==    by 0x16EBDB: crossbeam_epoch::internal::Local::release_handle (internal.rs:441)
==3258==    by 0x1736A0: <crossbeam_epoch::collector::Handle as core::ops::drop::Drop>::drop (collector.rs:92)
==3258==    by 0x17A3CD: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x17A690: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x171078: std::thread::local::fast::destroy_value (local.rs:402)
==3258==    by 0x56C88AE: __call_tls_dtors (cxa_thread_atexit_impl.c:155)
==3258==    by 0x52556E8: start_thread (pthread_create.c:470)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x66670c0 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667080 by thread #2
==3258== Locks held: none
==3258==    at 0x175AB3: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x16FED3: <crossbeam_epoch::atomic::Atomic<T>>::load (atomic.rs:210)
==3258==    by 0x17262B: <crossbeam_epoch::sync::queue::Queue<T>>::push (queue.rs:97)
==3258==    by 0x16DAA8: crossbeam_epoch::internal::Global::push_bag (internal.rs:163)
==3258==    by 0x16EFF7: crossbeam_epoch::internal::Local::finalize (internal.rs:458)
==3258==    by 0x16EBDB: crossbeam_epoch::internal::Local::release_handle (internal.rs:441)
==3258==    by 0x1736A0: <crossbeam_epoch::collector::Handle as core::ops::drop::Drop>::drop (collector.rs:92)
==3258==    by 0x17A3CD: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x17A690: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x171078: std::thread::local::fast::destroy_value (local.rs:402)
==3258==    by 0x56C88AE: __call_tls_dtors (cxa_thread_atexit_impl.c:155)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x6667080 is in a rw- anonymous segment
==3258== 
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667000 by thread #2
==3258== Locks held: none
==3258==    at 0x17564F: core::sync::atomic::atomic_sub (atomic.rs:1745)
==3258==    by 0x175A56: core::sync::atomic::AtomicUsize::fetch_sub (atomic.rs:1322)
==3258==    by 0x1720C5: <alloc::arc::Arc<T> as core::ops::drop::Drop>::drop (arc.rs:935)
==3258==    by 0x17A45D: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x17A3BD: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x173ECF: core::mem::drop (mem.rs:790)
==3258==    by 0x16F0B2: crossbeam_epoch::internal::Local::finalize (internal.rs:475)
==3258==    by 0x16EBDB: crossbeam_epoch::internal::Local::release_handle (internal.rs:441)
==3258==    by 0x1736A0: <crossbeam_epoch::collector::Handle as core::ops::drop::Drop>::drop (collector.rs:92)
==3258==    by 0x17A3CD: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x17A690: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x171078: std::thread::local::fast::destroy_value (local.rs:402)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x171A2F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==  Address 0x6667000 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== ERROR SUMMARY: 84 errors from 41 contexts (suppressed: 380 from 61)
==3258== 
==3258== 1 errors in context 1 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667000 by thread #2
==3258== Locks held: none
==3258==    at 0x17564F: core::sync::atomic::atomic_sub (atomic.rs:1745)
==3258==    by 0x175A56: core::sync::atomic::AtomicUsize::fetch_sub (atomic.rs:1322)
==3258==    by 0x1720C5: <alloc::arc::Arc<T> as core::ops::drop::Drop>::drop (arc.rs:935)
==3258==    by 0x17A45D: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x17A3BD: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x173ECF: core::mem::drop (mem.rs:790)
==3258==    by 0x16F0B2: crossbeam_epoch::internal::Local::finalize (internal.rs:475)
==3258==    by 0x16EBDB: crossbeam_epoch::internal::Local::release_handle (internal.rs:441)
==3258==    by 0x1736A0: <crossbeam_epoch::collector::Handle as core::ops::drop::Drop>::drop (collector.rs:92)
==3258==    by 0x17A3CD: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x17A690: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x171078: std::thread::local::fast::destroy_value (local.rs:402)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x171A2F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==  Address 0x6667000 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 2 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667080 by thread #2
==3258== Locks held: none
==3258==    at 0x175AB3: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x16FED3: <crossbeam_epoch::atomic::Atomic<T>>::load (atomic.rs:210)
==3258==    by 0x17262B: <crossbeam_epoch::sync::queue::Queue<T>>::push (queue.rs:97)
==3258==    by 0x16DAA8: crossbeam_epoch::internal::Global::push_bag (internal.rs:163)
==3258==    by 0x16EFF7: crossbeam_epoch::internal::Local::finalize (internal.rs:458)
==3258==    by 0x16EBDB: crossbeam_epoch::internal::Local::release_handle (internal.rs:441)
==3258==    by 0x1736A0: <crossbeam_epoch::collector::Handle as core::ops::drop::Drop>::drop (collector.rs:92)
==3258==    by 0x17A3CD: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x17A690: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x171078: std::thread::local::fast::destroy_value (local.rs:402)
==3258==    by 0x56C88AE: __call_tls_dtors (cxa_thread_atexit_impl.c:155)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x6667080 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 3 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x66670C0 by thread #2
==3258== Locks held: none
==3258==    at 0x175AC2: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x17AD4E: crossbeam_epoch::epoch::AtomicEpoch::load (epoch.rs:86)
==3258==    by 0x16E65E: crossbeam_epoch::internal::Local::pin (internal.rs:348)
==3258==    by 0x16EF87: crossbeam_epoch::internal::Local::finalize (internal.rs:457)
==3258==    by 0x16EBDB: crossbeam_epoch::internal::Local::release_handle (internal.rs:441)
==3258==    by 0x1736A0: <crossbeam_epoch::collector::Handle as core::ops::drop::Drop>::drop (collector.rs:92)
==3258==    by 0x17A3CD: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x17A690: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x171078: std::thread::local::fast::destroy_value (local.rs:402)
==3258==    by 0x56C88AE: __call_tls_dtors (cxa_thread_atexit_impl.c:155)
==3258==    by 0x52556E8: start_thread (pthread_create.c:470)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x66670c0 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 4 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 8 at 0x6644A08 by thread #1
==3258== Locks held: none
==3258==    at 0x16CDEC: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x149236: core::sync::atomic::AtomicUsize::store (atomic.rs:1119)
==3258==    by 0x12B1D5: crossbeam_epoch::epoch::AtomicEpoch::store (epoch.rs:92)
==3258==    by 0x14D6CC: crossbeam_epoch::internal::Local::unpin (internal.rs:393)
==3258==    by 0x123077: <crossbeam_epoch::guard::Guard as core::ops::drop::Drop>::drop (guard.rs:328)
==3258==    by 0x121D5D: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x11E70D: <crossbeam_channel::flavors::list::Channel<T>>::read (list.rs:298)
==3258==    by 0x11E7EB: <crossbeam_channel::flavors::list::Channel<T>>::recv (list.rs:316)
==3258==    by 0x13B2CE: <crossbeam_channel::internal::channel::Receiver<T>>::recv (channel.rs:527)
==3258==    by 0x152E82: word_counter::main (main.rs:181)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258== 
==3258== This conflicts with a previous read of size 8 by thread #2
==3258== Locks held: none
==3258==    at 0x175AC2: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x17AD4E: crossbeam_epoch::epoch::AtomicEpoch::load (epoch.rs:86)
==3258==    by 0x16DF67: crossbeam_epoch::internal::Global::try_advance (internal.rs:220)
==3258==    by 0x16DB25: crossbeam_epoch::internal::Global::collect (internal.rs:175)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==  Address 0x6644a08 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 5 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66170C0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x14DB26: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x1375BD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x148C42: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x152A22: word_counter::main (main.rs:152)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258==  Address 0x66170c0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 1 at 0x661A100 by thread #1
==3258== Locks held: none
==3258==    at 0x14C21F: core::ptr::read (ptr.rs:287)
==3258==    by 0x144DD2: core::ptr::<impl *mut T>::read (ptr.rs:1828)
==3258==    by 0x11E6BB: <crossbeam_channel::flavors::list::Channel<T>>::read (list.rs:295)
==3258==    by 0x11E7EB: <crossbeam_channel::flavors::list::Channel<T>>::recv (list.rs:316)
==3258==    by 0x13B2CE: <crossbeam_channel::internal::channel::Receiver<T>>::recv (channel.rs:527)
==3258==    by 0x152E82: word_counter::main (main.rs:181)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #2
==3258== Locks held: 1, at address 0x66170C0
==3258==    at 0x14C767: core::ptr::write (ptr.rs:363)
==3258==    by 0x144E1C: core::ptr::<impl *mut T>::write (ptr.rs:2120)
==3258==    by 0x11EED7: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:185)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258==    by 0x152310: word_counter::collect_dict (main.rs:124)
==3258==    by 0x124C9B: word_counter::main::{{closure}} (main.rs:176)
==3258==    by 0x1376A3: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258==  Address 0x661a100 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 6 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66170C0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x14DB26: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x1375BD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x148C42: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x152A22: word_counter::main (main.rs:152)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258==  Address 0x66170c0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 1 at 0x661A101 by thread #1
==3258== Locks held: none
==3258==    at 0x16CC21: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x148EED: core::sync::atomic::AtomicBool::load (atomic.rs:320)
==3258==    by 0x11DE39: <crossbeam_channel::flavors::list::Channel<T>>::start_recv (list.rs:222)
==3258==    by 0x11E7CC: <crossbeam_channel::flavors::list::Channel<T>>::recv (list.rs:314)
==3258==    by 0x13B2CE: <crossbeam_channel::internal::channel::Receiver<T>>::recv (channel.rs:527)
==3258==    by 0x152E82: word_counter::main (main.rs:181)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #2
==3258== Locks held: 1, at address 0x66170C0
==3258==    at 0x16CCED: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x148FAD: core::sync::atomic::AtomicBool::store (atomic.rs:351)
==3258==    by 0x11EF02: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:186)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258==    by 0x152310: word_counter::collect_dict (main.rs:124)
==3258==    by 0x124C9B: word_counter::main::{{closure}} (main.rs:176)
==3258==    by 0x1376A3: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258==  Address 0x661a101 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 7 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66170C0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x14DB26: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x1375BD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x148C42: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x152A22: word_counter::main (main.rs:152)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258==  Address 0x66170c0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during write of size 1 at 0x661A101 by thread #2
==3258== Locks held: 1, at address 0x66170C0
==3258==    at 0x16CCED: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x148FAD: core::sync::atomic::AtomicBool::store (atomic.rs:351)
==3258==    by 0x11EF02: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:186)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258==    by 0x152310: word_counter::collect_dict (main.rs:124)
==3258==    by 0x124C9B: word_counter::main::{{closure}} (main.rs:176)
==3258==    by 0x1376A3: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258==    by 0x12B556: std::panicking::try::do_call (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x12B43E: std::panicking::try (panicking.rs:289)
==3258==    by 0x137713: std::panic::catch_unwind (panic.rs:392)
==3258== 
==3258== This conflicts with a previous read of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x16CC21: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x148EED: core::sync::atomic::AtomicBool::load (atomic.rs:320)
==3258==    by 0x11DE39: <crossbeam_channel::flavors::list::Channel<T>>::start_recv (list.rs:222)
==3258==    by 0x11E7CC: <crossbeam_channel::flavors::list::Channel<T>>::recv (list.rs:314)
==3258==    by 0x13B2CE: <crossbeam_channel::internal::channel::Receiver<T>>::recv (channel.rs:527)
==3258==    by 0x152E82: word_counter::main (main.rs:181)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==  Address 0x661a101 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 8 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667040 by thread #2
==3258== Locks held: none
==3258==    at 0x175AB3: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x16FED3: <crossbeam_epoch::atomic::Atomic<T>>::load (atomic.rs:210)
==3258==    by 0x172D93: pop_if_internal<crossbeam_epoch::internal::SealedBag,&&closure> (queue.rs:134)
==3258==    by 0x172D93: <crossbeam_epoch::sync::queue::Queue<T>>::try_pop_if (queue.rs:172)
==3258==    by 0x16DC35: crossbeam_epoch::internal::Global::collect (internal.rs:184)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x6667040 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 9 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 8 at 0x66670C0 by thread #2
==3258== Locks held: none
==3258==    at 0x175B8C: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x175976: core::sync::atomic::AtomicUsize::store (atomic.rs:1119)
==3258==    by 0x17AD95: crossbeam_epoch::epoch::AtomicEpoch::store (epoch.rs:92)
==3258==    by 0x16E052: crossbeam_epoch::internal::Global::try_advance (internal.rs:240)
==3258==    by 0x16DB25: crossbeam_epoch::internal::Global::collect (internal.rs:175)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x66670c0 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 10 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6644A08 by thread #2
==3258== Locks held: none
==3258==    at 0x175AC2: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x17AD4E: crossbeam_epoch::epoch::AtomicEpoch::load (epoch.rs:86)
==3258==    by 0x16DF67: crossbeam_epoch::internal::Global::try_advance (internal.rs:220)
==3258==    by 0x16DB25: crossbeam_epoch::internal::Global::collect (internal.rs:175)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x170782: new<crossbeam_epoch::internal::Local> (boxed.rs:96)
==3258==    by 0x170782: <crossbeam_epoch::atomic::Owned<T>>::new (atomic.rs:627)
==3258==    by 0x16E212: crossbeam_epoch::internal::Local::register (internal.rs:283)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==  Address 0x6644a08 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 11 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6644A00 by thread #2
==3258== Locks held: none
==3258==    at 0x175AB3: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x16FE93: <crossbeam_epoch::atomic::Atomic<T>>::load (atomic.rs:210)
==3258==    by 0x178040: <crossbeam_epoch::sync::list::Iter<'g, T, C> as core::iter::iterator::Iterator>::next (list.rs:238)
==3258==    by 0x16DE77: crossbeam_epoch::internal::Global::try_advance (internal.rs:211)
==3258==    by 0x16DB25: crossbeam_epoch::internal::Global::collect (internal.rs:175)
==3258==    by 0x14D609: crossbeam_epoch::internal::Local::pin (internal.rs:379)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x170782: new<crossbeam_epoch::internal::Local> (boxed.rs:96)
==3258==    by 0x170782: <crossbeam_epoch::atomic::Owned<T>>::new (atomic.rs:627)
==3258==    by 0x16E212: crossbeam_epoch::internal::Local::register (internal.rs:283)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==  Address 0x6644a00 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 12 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667100 by thread #2
==3258== Locks held: none
==3258==    at 0x175AC2: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x17592D: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x16FE93: <crossbeam_epoch::atomic::Atomic<T>>::load (atomic.rs:210)
==3258==    by 0x177C32: <crossbeam_epoch::sync::list::List<T, C>>::insert (list.rs:178)
==3258==    by 0x16E2D7: crossbeam_epoch::internal::Local::register (internal.rs:292)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x6667100 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 13 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6667000 by thread #2
==3258== Locks held: none
==3258==    at 0x17554F: core::sync::atomic::atomic_add (atomic.rs:1734)
==3258==    by 0x175A06: core::sync::atomic::AtomicUsize::fetch_add (atomic.rs:1301)
==3258==    by 0x172055: <alloc::arc::Arc<T> as core::clone::Clone>::clone (arc.rs:713)
==3258==    by 0x173672: <crossbeam_epoch::collector::Collector as core::clone::Clone>::clone (collector.rs:45)
==3258==    by 0x16E0C7: crossbeam_epoch::internal::Local::register (internal.rs:286)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x171A2F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==  Address 0x6667000 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 14 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x4941B8 by thread #2
==3258== Locks held: none
==3258==    at 0x172174: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:27)
==3258==    by 0x172174: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x172174: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258==    by 0x151B6C: word_counter::count_words (main.rs:92)
==3258==    by 0x124C53: word_counter::main::{{closure}} (main.rs:162)
==3258==    by 0x1376DA: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x17B15B: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x4941b8 is 0 bytes inside data symbol "_ZN79_$LT$crossbeam_epoch..default..COLLECTOR$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17h18958159d0a321b1E"
==3258== 
==3258== 
==3258== 1 errors in context 15 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==3258==    at 0x4C348F4: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x12C97E: <spmc::Sender<T> as core::ops::drop::Drop>::drop (lib.rs:79)
==3258==    by 0x120960: core::ptr::drop_in_place (ptr.rs:59)
==3258==    by 0x14420F: core::mem::drop (mem.rs:790)
==3258==    by 0x1511C3: word_counter::read_file_char (main.rs:62)
==3258==    by 0x152D6B: word_counter::main (main.rs:168)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== 
==3258== 1 errors in context 16 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==3258==    at 0x4C34714: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x12BD19: <spmc::Sender<T>>::send (lib.rs:67)
==3258==    by 0x15118D: word_counter::read_file_char (main.rs:61)
==3258==    by 0x152D6B: word_counter::main (main.rs:168)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== 
==3258== 1 errors in context 17 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6620038 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E8E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x12381B: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x12381B: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620038 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 18 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 2 at 0x6620034 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E8E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x12380F: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x12380F: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620034 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 19 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 4 at 0x6620030 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E8E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 4 by thread #1
==3258== Locks held: none
==3258==    at 0x12380F: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x12380F: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620030 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 20 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x6620028 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E80: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x123803: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x123803: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620028 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 21 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 4 at 0x6620024 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E80: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 4 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620024 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 22 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 2 at 0x6620022 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E80: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620022 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 23 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66171B0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x18FAA6: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x189CBD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x187089: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x17CB6E: rayon_core::registry::Registry::new (registry.rs:113)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==  Address 0x66171b0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 8 at 0x662D008 by thread #2
==3258== Locks held: none
==3258==    at 0x1989D3: core::ptr::read (ptr.rs:287)
==3258==    by 0x18EC9B: <crossbeam_deque::Buffer<T>>::read (lib.rs:158)
==3258==    by 0x18EF80: <crossbeam_deque::Stealer<T>>::steal (lib.rs:730)
==3258==    by 0x17DE16: rayon_core::registry::Registry::pop_injected_job (registry.rs:312)
==3258==    by 0x17E884: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (registry.rs:565)
==3258==    by 0x192737: <core::option::Option<T>>::or_else (option.rs:714)
==3258==    by 0x17E55C: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:563)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==    by 0x196D90: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)
==3258==    by 0x18BB83: std::thread::Builder::spawn::{{closure}}::{{closure}} (mod.rs:409)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: 1, at address 0x66171B0
==3258==    at 0x198AF3: core::ptr::write (ptr.rs:363)
==3258==    by 0x18ED1C: <crossbeam_deque::Buffer<T>>::write (lib.rs:153)
==3258==    by 0x18DF20: <crossbeam_deque::Deque<T>>::push (lib.rs:423)
==3258==    by 0x17DDB0: rayon_core::registry::Registry::inject (registry.rs:304)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==  Address 0x662d008 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 24 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66171B0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x18FAA6: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x189CBD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x187089: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x17CB6E: rayon_core::registry::Registry::new (registry.rs:113)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==  Address 0x66171b0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 8 at 0x662D000 by thread #2
==3258== Locks held: none
==3258==    at 0x1989CB: core::ptr::read (ptr.rs:287)
==3258==    by 0x18EC9B: <crossbeam_deque::Buffer<T>>::read (lib.rs:158)
==3258==    by 0x18EF80: <crossbeam_deque::Stealer<T>>::steal (lib.rs:730)
==3258==    by 0x17DE16: rayon_core::registry::Registry::pop_injected_job (registry.rs:312)
==3258==    by 0x17E884: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (registry.rs:565)
==3258==    by 0x192737: <core::option::Option<T>>::or_else (option.rs:714)
==3258==    by 0x17E55C: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:563)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==    by 0x196D90: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)
==3258==    by 0x18BB83: std::thread::Builder::spawn::{{closure}}::{{closure}} (mod.rs:409)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: 1, at address 0x66171B0
==3258==    at 0x198AF0: core::ptr::write (ptr.rs:363)
==3258==    by 0x18ED1C: <crossbeam_deque::Buffer<T>>::write (lib.rs:153)
==3258==    by 0x18DF20: <crossbeam_deque::Deque<T>>::push (lib.rs:423)
==3258==    by 0x17DDB0: rayon_core::registry::Registry::inject (registry.rs:304)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==  Address 0x662d000 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 25 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66171B0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x18FAA6: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x189CBD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x187089: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x17CB6E: rayon_core::registry::Registry::new (registry.rs:113)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==  Address 0x66171b0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during read of size 8 at 0x661A150 by thread #2
==3258== Locks held: none
==3258==    at 0x199333: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x198F9D: core::sync::atomic::AtomicIsize::load (atomic.rs:1088)
==3258==    by 0x18EE8D: <crossbeam_deque::Stealer<T>>::steal (lib.rs:721)
==3258==    by 0x17DE16: rayon_core::registry::Registry::pop_injected_job (registry.rs:312)
==3258==    by 0x17E884: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (registry.rs:565)
==3258==    by 0x192737: <core::option::Option<T>>::or_else (option.rs:714)
==3258==    by 0x17E55C: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:563)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==    by 0x196D90: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:136)
==3258==    by 0x18BB83: std::thread::Builder::spawn::{{closure}}::{{closure}} (mod.rs:409)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: 1, at address 0x66171B0
==3258==    at 0x199550: core::sync::atomic::atomic_store (atomic.rs:1695)
==3258==    by 0x198FE6: core::sync::atomic::AtomicIsize::store (atomic.rs:1119)
==3258==    by 0x18DFA2: <crossbeam_deque::Deque<T>>::push (lib.rs:425)
==3258==    by 0x17DDB0: rayon_core::registry::Registry::inject (registry.rs:304)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==  Address 0x661a150 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 26 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258==  Lock at 0x66171B0 was first observed
==3258==    at 0x4C37F2A: pthread_mutex_init (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x18FAA6: std::sys::unix::mutex::Mutex::init (mutex.rs:60)
==3258==    by 0x189CBD: std::sys_common::mutex::Mutex::init (mutex.rs:33)
==3258==    by 0x187089: <std::sync::mutex::Mutex<T>>::new (mutex.rs:185)
==3258==    by 0x17CB6E: rayon_core::registry::Registry::new (registry.rs:113)
==3258==    by 0x18585D: rayon_core::thread_pool::build (mod.rs:56)
==3258==    by 0x192DB7: rayon_core::ThreadPoolBuilder::build (lib.rs:178)
==3258==    by 0x152ABB: word_counter::main (main.rs:154)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==  Address 0x66171b0 is in a rw- anonymous segment
==3258== 
==3258== Possible data race during write of size 8 at 0x661A150 by thread #1
==3258== Locks held: 1, at address 0x66171B0
==3258==    at 0x199550: core::sync::atomic::atomic_store (atomic.rs:1695)
==3258==    by 0x198FE6: core::sync::atomic::AtomicIsize::store (atomic.rs:1119)
==3258==    by 0x18DFA2: <crossbeam_deque::Deque<T>>::push (lib.rs:425)
==3258==    by 0x17DDB0: rayon_core::registry::Registry::inject (registry.rs:304)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258== 
==3258== This conflicts with a previous read of size 8 by thread #2
==3258== Locks held: none
==3258==    at 0x199333: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x198F9D: core::sync::atomic::AtomicIsize::load (atomic.rs:1088)
==3258==    by 0x18EE8D: <crossbeam_deque::Stealer<T>>::steal (lib.rs:721)
==3258==    by 0x17DE16: rayon_core::registry::Registry::pop_injected_job (registry.rs:312)
==3258==    by 0x17E884: rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (registry.rs:565)
==3258==    by 0x192737: <core::option::Option<T>>::or_else (option.rs:714)
==3258==    by 0x17E55C: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:563)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==  Address 0x661a150 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 27 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x6C1D000 by thread #1
==3258== Locks held: none
==3258==    at 0x17DB16: rayon_core::registry::Registry::inject (registry.rs:292)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #2
==3258== Locks held: none
==3258==    at 0x196FF6: new<bool> (boxed.rs:96)
==3258==    by 0x196FF6: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x196EEA: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x196E6F: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x186C9E: get<bool,fn() -> bool> (lazy.rs:23)
==3258==    by 0x186C9E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x186C9E: <rayon_core::log::LOG_ENV as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x17E347: rayon_core::registry::WorkerThread::wait_until (registry.rs:541)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==  Address 0x6c1d000 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 1 errors in context 28 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x4941C8 by thread #1
==3258== Locks held: none
==3258==    at 0x186CA4: get<bool,fn() -> bool> (lazy.rs:27)
==3258==    by 0x186CA4: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x186CA4: <rayon_core::log::LOG_ENV as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x17DB0B: rayon_core::registry::Registry::inject (registry.rs:292)
==3258==    by 0x17DABD: rayon_core::registry::Registry::inject_or_push (registry.rs:237)
==3258==    by 0x12389A: rayon_core::spawn::spawn_in (mod.rs:90)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #2
==3258== Locks held: none
==3258==    at 0x197017: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x196EEA: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x196E6F: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x186C9E: get<bool,fn() -> bool> (lazy.rs:23)
==3258==    by 0x186C9E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x186C9E: <rayon_core::log::LOG_ENV as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x17E347: rayon_core::registry::WorkerThread::wait_until (registry.rs:541)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258==    by 0x17D86C: rayon_core::registry::Registry::new::{{closure}} (registry.rs:134)
==3258==  Address 0x4941c8 is 0 bytes inside data symbol "_ZN68_$LT$rayon_core..log..LOG_ENV$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17ha96f2a5faf185afdE"
==3258== 
==3258== 
==3258== 2 errors in context 29 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 2 at 0x6616128 by thread #2
==3258== Locks held: none
==3258==    at 0x174AAE: <core::ptr::NonNull<T>>::as_ref (ptr.rs:2905)
==3258==    by 0x171B02: <alloc::arc::Arc<T>>::inner (arc.rs:510)
==3258==    by 0x172112: <alloc::arc::Arc<T> as core::ops::deref::Deref>::deref (arc.rs:740)
==3258==    by 0x16E291: crossbeam_epoch::internal::Local::register (internal.rs:292)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x17B137: new<crossbeam_epoch::collector::Collector> (boxed.rs:96)
==3258==    by 0x17B137: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x6616128 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 2 errors in context 30 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 2 at 0x6616128 by thread #2
==3258== Locks held: none
==3258==    at 0x174AAE: <core::ptr::NonNull<T>>::as_ref (ptr.rs:2905)
==3258==    by 0x171B02: <alloc::arc::Arc<T>>::inner (arc.rs:510)
==3258==    by 0x172032: <alloc::arc::Arc<T> as core::clone::Clone>::clone (arc.rs:713)
==3258==    by 0x173672: <crossbeam_epoch::collector::Collector as core::clone::Clone>::clone (collector.rs:45)
==3258==    by 0x16E0C7: crossbeam_epoch::internal::Local::register (internal.rs:286)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x17B137: new<crossbeam_epoch::collector::Collector> (boxed.rs:96)
==3258==    by 0x17B137: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x6616128 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 2 errors in context 31 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 8 at 0x6620028 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x135917: core::ptr::swap_nonoverlapping_bytes (ptr.rs:222)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x123803: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x123803: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620028 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 2 errors in context 32 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 2 at 0x6620022 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x135917: core::ptr::swap_nonoverlapping_bytes (ptr.rs:222)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 2 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620022 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 2 errors in context 33 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 4 at 0x6620024 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x135917: core::ptr::swap_nonoverlapping_bytes (ptr.rs:222)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 4 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620024 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 2 errors in context 34 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x6620036 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E8E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x12380F: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x12380F: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620036 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 2 errors in context 35 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x6620020 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E80: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x1358F6: core::ptr::swap_nonoverlapping_bytes (ptr.rs:221)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620020 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 3 errors in context 36 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 8 at 0x661F008 by thread #1
==3258== Locks held: none
==3258==    at 0x16CDEC: core::sync::atomic::atomic_store (atomic.rs:1694)
==3258==    by 0x133399: <core::sync::atomic::AtomicPtr<T>>::store (atomic.rs:764)
==3258==    by 0x12BA8C: <spmc::Queue<T>>::push (lib.rs:216)
==3258==    by 0x12BC14: <spmc::Sender<T>>::send (lib.rs:64)
==3258==    by 0x151038: word_counter::read_file_char (main.rs:55)
==3258==    by 0x152D6B: word_counter::main (main.rs:168)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
==3258== This conflicts with a previous read of size 8 by thread #2
==3258== Locks held: none
==3258==    at 0x16CB63: core::sync::atomic::atomic_load (atomic.rs:1706)
==3258==    by 0x1332C0: <core::sync::atomic::AtomicPtr<T>>::load (atomic.rs:731)
==3258==    by 0x12B8F9: <spmc::Queue<T>>::pop (lib.rs:235)
==3258==    by 0x12C43D: <spmc::Receiver<T>>::try_recv (lib.rs:108)
==3258==    by 0x12BE1E: <spmc::Receiver<T>>::recv (lib.rs:125)
==3258==    by 0x1515DE: word_counter::count_words (main.rs:71)
==3258==    by 0x124C53: word_counter::main::{{closure}} (main.rs:162)
==3258==    by 0x1376DA: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (panic.rs:308)
==3258==  Address 0x661f008 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 4 errors in context 37 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 8 at 0x66670C0 by thread #2
==3258== Locks held: none
==3258==    at 0x16CB72: core::sync::atomic::atomic_load (atomic.rs:1707)
==3258==    by 0x1491ED: core::sync::atomic::AtomicUsize::load (atomic.rs:1088)
==3258==    by 0x12B18E: crossbeam_epoch::epoch::AtomicEpoch::load (epoch.rs:86)
==3258==    by 0x14D26E: crossbeam_epoch::internal::Local::pin (internal.rs:348)
==3258==    by 0x127FC5: crossbeam_epoch::collector::Handle::pin (collector.rs:72)
==3258==    by 0x142732: crossbeam_epoch::default::pin::{{closure}} (default.rs:25)
==3258==    by 0x11A3DA: <std::thread::local::LocalKey<T>>::try_with (local.rs:294)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258==    by 0x13B132: <crossbeam_channel::internal::channel::Sender<T>>::send (channel.rs:301)
==3258== 
==3258== This conflicts with a previous write of size 8 by thread #1
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x171A5F: <alloc::arc::Arc<T>>::new (arc.rs:285)
==3258==    by 0x173612: crossbeam_epoch::collector::Collector::new (collector.rs:33)
==3258==    by 0x17A378: __static_ref_initialize (default.rs:12)
==3258==    by 0x17A378: core::ops::function::FnOnce::call_once (function.rs:223)
==3258==    by 0x17B10D: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==  Address 0x66670c0 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 4 errors in context 38 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x661612C by thread #2
==3258== Locks held: none
==3258==    at 0x174AAE: <core::ptr::NonNull<T>>::as_ref (ptr.rs:2905)
==3258==    by 0x171B02: <alloc::arc::Arc<T>>::inner (arc.rs:510)
==3258==    by 0x172112: <alloc::arc::Arc<T> as core::ops::deref::Deref>::deref (arc.rs:740)
==3258==    by 0x16E291: crossbeam_epoch::internal::Local::register (internal.rs:292)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258==    by 0x11EA35: <crossbeam_channel::flavors::list::Channel<T>>::send (list.rs:303)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x17B137: new<crossbeam_epoch::collector::Collector> (boxed.rs:96)
==3258==    by 0x17B137: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x661612c is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 4 errors in context 39 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during read of size 1 at 0x661612C by thread #2
==3258== Locks held: none
==3258==    at 0x174AAE: <core::ptr::NonNull<T>>::as_ref (ptr.rs:2905)
==3258==    by 0x171B02: <alloc::arc::Arc<T>>::inner (arc.rs:510)
==3258==    by 0x172032: <alloc::arc::Arc<T> as core::clone::Clone>::clone (arc.rs:713)
==3258==    by 0x173672: <crossbeam_epoch::collector::Collector as core::clone::Clone>::clone (collector.rs:45)
==3258==    by 0x16E0C7: crossbeam_epoch::internal::Local::register (internal.rs:286)
==3258==    by 0x173642: crossbeam_epoch::collector::Collector::register (collector.rs:38)
==3258==    by 0x14367E: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==    by 0x11A142: <std::thread::local::LocalKey<T>>::with (local.rs:248)
==3258==    by 0x143642: crossbeam_epoch::default::pin (default.rs:25)
==3258==    by 0x11EB46: <crossbeam_channel::flavors::list::Channel<T>>::write (list.rs:151)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x17B137: new<crossbeam_epoch::collector::Collector> (boxed.rs:96)
==3258==    by 0x17B137: <lazy_static::lazy::Lazy<T>>::get::{{closure}} (lazy.rs:24)
==3258==    by 0x17B07A: std::sync::once::Once::call_once::{{closure}} (once.rs:228)
==3258==    by 0x1EAC20: std::sync::once::Once::call_inner (once.rs:341)
==3258==    by 0x17AFFF: std::sync::once::Once::call_once (once.rs:228)
==3258==    by 0x17216E: get<crossbeam_epoch::collector::Collector,fn() -> crossbeam_epoch::collector::Collector> (lazy.rs:23)
==3258==    by 0x17216E: __stability (<__lazy_static_internal macros>:13)
==3258==    by 0x17216E: <crossbeam_epoch::default::COLLECTOR as core::ops::deref::Deref>::deref (<__lazy_static_internal macros>:14)
==3258==    by 0x14366F: crossbeam_epoch::default::HANDLE::__init (default.rs:17)
==3258==    by 0x119E55: <std::thread::local::LocalKey<T>>::init (local.rs:255)
==3258==    by 0x11A38D: <std::thread::local::LocalKey<T>>::try_with (local.rs:296)
==3258==  Address 0x661612c is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 4 errors in context 40 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Possible data race during write of size 1 at 0x6620020 by thread #2
==3258== Locks held: none
==3258==    at 0x4C39E83: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x135917: core::ptr::swap_nonoverlapping_bytes (ptr.rs:222)
==3258==    by 0x14C032: core::ptr::swap_nonoverlapping (ptr.rs:187)
==3258==    by 0x1443C3: core::mem::swap (mem.rs:636)
==3258==    by 0x144A1A: core::mem::replace (mem.rs:694)
==3258==    by 0x145868: <core::option::Option<T>>::take (option.rs:846)
==3258==    by 0x14CFD6: <rayon_core::job::HeapJob<BODY> as rayon_core::job::Job>::execute (job.rs:155)
==3258==    by 0x1878A8: rayon_core::job::JobRef::execute (job.rs:60)
==3258==    by 0x17E8BF: rayon_core::registry::WorkerThread::execute (registry.rs:583)
==3258==    by 0x17E654: rayon_core::registry::WorkerThread::wait_until_cold (registry.rs:567)
==3258==    by 0x17E447: rayon_core::registry::WorkerThread::wait_until (registry.rs:543)
==3258==    by 0x17F159: rayon_core::registry::main_loop (registry.rs:674)
==3258== 
==3258== This conflicts with a previous write of size 1 by thread #1
==3258== Locks held: none
==3258==    at 0x1237F8: new<rayon_core::job::HeapJob<closure>> (boxed.rs:96)
==3258==    by 0x1237F8: rayon_core::spawn::spawn_in (mod.rs:69)
==3258==    by 0x135E54: rayon_core::thread_pool::ThreadPool::spawn (mod.rs:248)
==3258==    by 0x152D08: word_counter::main (main.rs:162)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==  Address 0x6620020 is in a rw- anonymous segment
==3258== 
==3258== 
==3258== 23 errors in context 41 of 41:
==3258== ----------------------------------------------------------------
==3258== 
==3258== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==3258==    at 0x4C34714: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==3258==    by 0x12BD19: <spmc::Sender<T>>::send (lib.rs:67)
==3258==    by 0x151038: word_counter::read_file_char (main.rs:55)
==3258==    by 0x152D6B: word_counter::main (main.rs:168)
==3258==    by 0x134CDF: std::rt::lang_start::{{closure}} (rt.rs:74)
==3258==    by 0x1DBF82: {{closure}} (rt.rs:59)
==3258==    by 0x1DBF82: _ZN3std9panicking3try7do_call17hf84d77c28086f4f1E.llvm.12208709943363306989 (panicking.rs:310)
==3258==    by 0x1F6EC9: __rust_maybe_catch_panic (lib.rs:105)
==3258==    by 0x1DA315: try<i32,closure> (panicking.rs:289)
==3258==    by 0x1DA315: catch_unwind<closure,i32> (panic.rs:392)
==3258==    by 0x1DA315: std::rt::lang_start_internal (rt.rs:58)
==3258==    by 0x134CB7: std::rt::lang_start (rt.rs:74)
==3258==    by 0x1535FC: main (in /home/yurochko/Main/study+test/c++far/word_counter/target/debug/word_counter)
==3258== 
--3258-- 
--3258-- used_suppression:    380 helgrind-glibc2X-005 /usr/lib/valgrind/default.supp:951
==3258== 
==3258== ERROR SUMMARY: 84 errors from 41 contexts (suppressed: 380 from 61)
